

def test
	k = "73167176531330624919225119674426574742355349194934969835203127745063262395783180169848018694788518438586156078911294949545950173795833195285320880551112540698747158523863050715693290963295227443043557668966489504452445231617318564030987111217223831136222989342338030813533627661428280644448664523874930358907296290491560440772390713810515859307960866701724271218839987979087922749219016997208880937766572733300105336788122023542180975125454059475224352584907711670556013604839586446706324415722155397536978179778461740649551492908625693219784686224828397224137565705605749026140797296865241453510047482166370484403199890008895243450658541227588666881 16427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450"
	@num = 0
	(0..(k.length - 1)).each do |idx|
		@tempnum = 0
		@tempfinal = []
		13.times do |i|
			@tempnum += k[idx+(i-1)].to_i
			@tempfinal << k[idx+(i-1)].to_i
			if @tempnum > @num
				@num = @tempnum
				@final = @tempfinal
			end
		end
	end
	puts "product: #{@num}"
	puts "range of numbers: #{@final}"
end

test

#product: 93
#range of numbers: [8, 3, 9, 9, 8, 7, 9, 7, 9, 0, 8, 7, 9]
#[Finished in 0.2s]




